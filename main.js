(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,'body{\n    background-color: rgb(53, 180, 182);\n}\n.page {\n    display: grid;\n    grid-template-rows: 10vh 85vh 5vh;\n    /* background-color: #d40d7e; */\n}\n.imageSlider {\n    padding: 40px;\n    background-color: rgb(193, 75, 95);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n\n}\n\n.dropMenu{\n    display: grid;\n    grid-template-columns: 5fr repeat(4, 1fr)\n}\n.iconMenu {\n    background-color: rgb(1, 74, 74);\n    border: 3px solid blue;\n    border-radius: 15px;\n    position: relative;\n    display: none;\n    height: 300px;\n}\n.dropMenu .show {\n    display: block;\n}\n.imgs div {\n\n    /* border: 4px solid red; */\n    /* padding: 140px; */\n    display: none;\n}\n\n.imgs .visible {\n    display: block;\n    width: 600px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n}\n.nav {\n    display: flex;\n    margin: 50px;\n}\n/* .arrow-right::after\n {\n    content: "";\n    border-top: 5px solid transparent;\n    border-bottom: 5px solid transparent;\n    border-left: 5px solid black;\n    display: inline-block;\n    height: 0;\n    width: 0;\n    vertical-align: middle;\n    margin-left: 5px;\n}\n.arrow-left::after {\n        content: "";\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        border-right: 5px solid black;\n        display: inline-block;\n        height: 0;\n        width: 0;\n        vertical-align: left;\n        margin-left: 5px;\n} */\n\n.slider-dots {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .dot {\n    width: 20px;\n    height: 20px;\n    border: 5px solid white;\n    border-radius: 50%;\n    /* background-color: white; */\n    margin: 0 10px;\n  }\n  .slider-dots .fill {\n    background-color: rgb(16, 145, 184);\n  }\n  img {\n    max-width: 900px;\n    max-height: 450px;\n\n  }\n  .footer {\n    /* background-color: aqua; */\n    display: flex;\n    justify-content: center;\n  }\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,mCAAmC;AACvC;AACA;IACI,aAAa;IACb,iCAAiC;IACjC,+BAA+B;AACnC;AACA;IACI,aAAa;IACb,kCAAkC;IAClC,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;;AAE1B;;AAEA;IACI,aAAa;IACb;AACJ;AACA;IACI,gCAAgC;IAChC,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,aAAa;AACjB;AACA;IACI,cAAc;AAClB;AACA;;IAEI,2BAA2B;IAC3B,oBAAoB;IACpB,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;AAEvB;AACA;IACI,aAAa;IACb,YAAY;AAChB;AACA;;;;;;;;;;;;;;;;;;;;;;GAsBG;;AAEH;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;EACrB;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,6BAA6B;IAC7B,cAAc;EAChB;EACA;IACE,mCAAmC;EACrC;EACA;IACE,gBAAgB;IAChB,iBAAiB;;EAEnB;EACA;IACE,4BAA4B;IAC5B,aAAa;IACb,uBAAuB;EACzB",sourcesContent:['body{\n    background-color: rgb(53, 180, 182);\n}\n.page {\n    display: grid;\n    grid-template-rows: 10vh 85vh 5vh;\n    /* background-color: #d40d7e; */\n}\n.imageSlider {\n    padding: 40px;\n    background-color: rgb(193, 75, 95);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n\n}\n\n.dropMenu{\n    display: grid;\n    grid-template-columns: 5fr repeat(4, 1fr)\n}\n.iconMenu {\n    background-color: rgb(1, 74, 74);\n    border: 3px solid blue;\n    border-radius: 15px;\n    position: relative;\n    display: none;\n    height: 300px;\n}\n.dropMenu .show {\n    display: block;\n}\n.imgs div {\n\n    /* border: 4px solid red; */\n    /* padding: 140px; */\n    display: none;\n}\n\n.imgs .visible {\n    display: block;\n    width: 600px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n}\n.nav {\n    display: flex;\n    margin: 50px;\n}\n/* .arrow-right::after\n {\n    content: "";\n    border-top: 5px solid transparent;\n    border-bottom: 5px solid transparent;\n    border-left: 5px solid black;\n    display: inline-block;\n    height: 0;\n    width: 0;\n    vertical-align: middle;\n    margin-left: 5px;\n}\n.arrow-left::after {\n        content: "";\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        border-right: 5px solid black;\n        display: inline-block;\n        height: 0;\n        width: 0;\n        vertical-align: left;\n        margin-left: 5px;\n} */\n\n.slider-dots {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .dot {\n    width: 20px;\n    height: 20px;\n    border: 5px solid white;\n    border-radius: 50%;\n    /* background-color: white; */\n    margin: 0 10px;\n  }\n  .slider-dots .fill {\n    background-color: rgb(16, 145, 184);\n  }\n  img {\n    max-width: 900px;\n    max-height: 450px;\n\n  }\n  .footer {\n    /* background-color: aqua; */\n    display: flex;\n    justify-content: center;\n  }\n'],sourceRoot:""}]);const l=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(a[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],l=0;l<n.length;l++){var s=n[l],c=r.base?s[0]+r.base:s[0],d=i[c]||0,p="".concat(c," ").concat(d);i[c]=d+1;var A=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var m=o(u,r);r.byIndex=l,e.splice(l,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var l=t(i[a]);e[l].references--}for(var s=r(n,o),c=0;c<i.length;c++){var d=t(i[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),l=t(565),s=t.n(l),c=t(216),d=t.n(c),p=t(589),A=t.n(p),u=t(426),m={};m.styleTagTransform=A(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=t.p+"7f72d088dfa26d09b743.jpg",g=t.p+"4846ac37296eba4dd575.jpg",b=t.p+"f51c9fbf839023984d2a.jpg",v=t.p+"9a0b6ad688dd5ca69bb5.jpg",h=t.p+"50dc31fcb0c679a181a3.jpg",C=(n,e)=>{n.classList.toggle(e)},y=document.querySelectorAll(".dropDown"),x=document.querySelectorAll(".iconMenu");y.forEach(((n,e)=>{n.addEventListener("mouseover",(()=>{C(x[e],"show")})),n.addEventListener("mouseout",(()=>{C(x[e],"show")}))}));const B=document.querySelector(".arrow-left"),I=document.querySelector(".arrow-right"),E=document.querySelector(".imgs"),w=document.querySelector(".slider-dots");B.addEventListener("click",(()=>{let n=E.lastElementChild,e=w.lastElementChild;const t=document.querySelector(".fill"),r=document.querySelector(".visible"),o=r.previousElementSibling;if(null===o)return console.log("last"),r.classList.remove("visible"),n.classList.add("visible"),t.classList.remove("fill"),void e.classList.add("fill");r.classList.remove("visible"),o.classList.add("visible");const i=t.previousElementSibling;t.classList.remove("fill"),i.classList.add("fill")}));let k=()=>{let n=E.firstElementChild,e=w.firstElementChild;const t=document.querySelector(".fill"),r=document.querySelector(".visible"),o=r.nextElementSibling;if(null===o)return console.log("last"),r.classList.remove("visible"),n.classList.add("visible"),t.classList.remove("fill"),void e.classList.add("fill");r.classList.remove("visible"),o.classList.add("visible");const i=t.nextElementSibling;t.classList.remove("fill"),i.classList.add("fill")};I.addEventListener("click",(()=>{k()})),document.querySelectorAll(".dot").forEach((n=>{n.addEventListener("click",(()=>{const e=document.querySelector(".fill"),t=document.querySelector(".visible"),r=document.querySelector(`.img${n.id}`);console.log("dot"),console.log(n.id),console.log(e),e.classList.remove("fill"),n.classList.add("fill"),t.classList.remove("visible"),r.classList.add("visible"),console.log(t),console.log(r)}))}));const S=document.querySelector(".img1"),L=document.querySelector(".img2"),j=document.querySelector(".img3"),q=document.querySelector(".img4"),M=document.querySelector(".img5"),T=`<img src="${f}" alt="A descriptive text for the image">`,$=`<img src="${g}" alt="A descriptive text for the image">`,H=`<img src="${b}" alt="A descriptive text for the image">`,Z=`<img src="${v}" alt="A descriptive text for the image">`,N=`<img src="${h}" alt="A descriptive text for the image">`;S.innerHTML=$,L.innerHTML=T,j.innerHTML=H,q.innerHTML=Z,M.innerHTML=N,setInterval((function(){k()}),5e3)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,